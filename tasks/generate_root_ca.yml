---
# new_key_cert_options:
#   type: root_ca = selfsigned), other = root_ca/SUB_root_ca signed)
#   delete:
  
#   cert_name:
#   cert_country_code:
#   cert_country:
#   cert_locality:
#   cert_organisation:
#   cert_organisational_unit:
#   cert_subj:
#   cert_subj_alt:
#   cert_email:
#   cert_digest:
#   cert_ocsp_staple:
#   cert_ocsp_staple_crt:

#   key_usage:
#   key_usage_crt:
#   key_ext_usage:
#   key_ext_crt:
#   key_cipher:
#   key_curve:
#   key_pass:
#   key_size:
#   key_type:


- name: Create root CA certificate
  block:
    - set_fact:
        root_ca_key_cert_options_overide: "{{ 
          root_ca_key_cert_options|combine(root_ca_key_options_template)|combine(
            {
            'name': root_ca_key_cert_options.cert_common_name|d(root_ca_key_cert_options.cert_name)|d(root_ca_key_cert_options.name)
            }
          )|combine(
              { 'base_path': certificates_base_path+'/root-ca/'+root_ca_key_cert_options.cert_common_name|d(root_ca_key_cert_options.cert_name)|d(root_ca_key_cert_options.name) }
            if not root_ca_key_cert_options.base_path|d(false) else
              {}
          )
          }}"

    # - set_fact:
    #     key_cert_options_overide: "{{ root_ca_key_cert_options_overide }}"
    - include_tasks: generate_key_csr.yml
      vars:
        key_cert_options_overide: "{{ root_ca_key_cert_options_overide }}"

    - name: Sign root CA certificate request
      local_action:
        module: community.crypto.x509_certificate
        select_crypto_backend: cryptography
        path: "{{ root_ca_key_cert_options_overide.base_path }}/cert.pem"
        csr_path: "{{ root_ca_key_cert_options_overide.base_path }}/csr.pem"
        provider: selfsigned
        privatekey_path: "{{ root_ca_key_cert_options_overide.base_path }}/key.pem"
        privatekey_passphrase: "{{ root_ca_key_cert_options_overide.key_pass|d(omit) }}"

    - name: Get cert content
      local_action:
        module: slurp
        src: "{{ root_ca_key_cert_options_overide.base_path }}/cert.pem"
      register: root_ca_cert_slurp

    - name: Create certificate and key file
      local_action:
        module: copy
        content: "{{ privatekey_slurp['content']|b64decode + root_ca_cert_slurp['content']|b64decode }}"
        dest: "{{ root_ca_key_cert_options_overide.base_path }}/cert_key.pem"
    - name: Create full chain certificate and key file
      local_action:
        module: copy
        content: "{{ privatekey_slurp['content']|b64decode + root_ca_cert_slurp['content']|b64decode }}"
        dest: "{{ root_ca_key_cert_options_overide.base_path }}/full_cert_key.pem"
    - name: Create full chain certificate
      local_action:
        module: copy
        content: "{{ root_ca_cert_slurp['content']|b64decode }}"
        dest: "{{ root_ca_key_cert_options_overide.base_path }}/full_cert.pem"

    # - set_fact:
    #     ca_key_cert_options_overide: "{{ root_ca_key_cert_options_overide }}"
    - import_tasks: ca_operation.yml
      vars:
        ca_key_cert_options_overide: "{{ root_ca_key_cert_options_overide }}"